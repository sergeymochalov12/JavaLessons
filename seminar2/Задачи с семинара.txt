1 задача

public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        double x = scan.nextDouble();
        int n = scan.nextInt();
        double res = pow(x, n);
        System.out.println("res = " + res);
    }

    /**
     * @apiNote возведение в степень. ”слови€: Implement pow(x, n), which calculates x raised to the power n (i.e., xn).
     * @param x основание
     * @param n степень
     * @return x ^ n 
     */
    private static double pow(double x, int n) {
        double res = 1;
        if (n < 0) {
            x = 1 / x;
            n *= -1;
        }
        for (int i = 0; i < n; i++) {
            res = res * x;
        }
        return res;
    }
________________
2 задача

public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("¬ведите длинну последовательности");
        int n = scanner.nextInt();
        int res = getRes(scanner, n);
        System.out.println("res = " + res);
    }

    /**
     * @param scanner
     * @param n       длинна последовательности
     * @return сумма
     * @apiNote ƒана последовательность из N целых чисел. Ќайти сумму чисел, оканчивающихс€ на 5, перед которыми идет четное число.
     */
    private static int getRes(Scanner scanner, int n) {
        int res = 0;
        System.out.println("¬ведите последовательность");
        int x = scanner.nextInt();
        for (int i = 0; i < n - 1; i++) {
            int y = scanner.nextInt();
            if (y % 10 == 5 && x % 2 == 0) {
                res = res + y;
            }
            x = y;
        }
        return res;
    }
_____________________________
3 задача
ƒан массив целых чисел. Ќайти количество пар соседних элементов, где первый элемент вдвое больше второго.

public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int k = 0;
        for (int i = 0; i < n - 1; i++) {
            if (arr[i] == arr[i + 1] * 2) {
                k++;
            }
        }
        System.out.println("k = " + k);
    }
________________________________________
4 задача
<dependencies>
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

@Data
@AllArgsConstructor
@NoArgsConstructor
public class Vector {
    private double x;
    private double y;
    private double z;

}


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class Vector {
    private double x;
    private double y;
    private double z;

    /**
     * @return длина вектора
     */
    public double length() {
        return Math.sqrt(x * x + y * y + z * z);
    }

    /**
     * @param vector2 второй вектор
     * @return скал€рное произведение
     */
    public double scalar(Vector vector2) {
        return x * vector2.x + y * vector2.y + z * vector2.z;
    }

    /**
     * @param vector2 второй вектор
     * @return векторное произведение
     */
    public Vector proizv(Vector vector2) {
        return new Vector(
                y * vector2.z - z * vector2.y,
                z * vector2.x - x * vector2.z,
                x * vector2.y - y * vector2.x
        );
    }

    /**
     * @param vector2 второй вектор
     * @return косинус
     */
    public double cos(Vector vector2) {
        return (scalar(vector2)) / (length() * vector2.length());
    }
}

public static void main(String[] args) {
        Vector vector = new Vector(1,1,1);
        Vector vector2 = new Vector(3,1,2);
        System.out.println("vector = " + vector);
        System.out.println("vector.length() = " + vector.length());
        System.out.println("vector.scalar(vector2) = " + vector.scalar(vector2));
        System.out.println("vector.proizv(vector2) = " + vector.proizv(vector2));
        System.out.println("vector.cos(vector2) = " + vector.cos(vector2));
    }



